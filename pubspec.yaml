name: doti_starter
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.2.6 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  cupertino_icons: ^1.0.2
  flutter_localizations: 
    sdk: flutter

  #* UI
  # cached_network_image:
  flash: ^3.1.0
  flutter_keyboard_visibility: ^6.0.0
  google_fonts: ^6.2.1
  flutter_svg: ^2.0.10+1
  gap: ^3.0.1

  #* Icons
  # flutter_vector_icons: 

  #* Firebase
  # firebase_analytics: 
  # firebase_core:
  # firebase_crashlytics: 
  # firebase_messaging: 

  #* Local notification
  # awesome_notifications: 

  #* Network
  dio: ^5.4.2
  pretty_dio_logger: ^1.3.1
  http: ^1.2.1

  #* Dart data class
  freezed_annotation: ^2.4.1 
  json_annotation: ^4.8.1

  #* Dependency Injection
  get_it: ^7.6.7
  injectable: ^2.3.5

  #* State management
  bloc_concurrency: ^0.2.5
  flutter_bloc: ^8.1.5
  bloc: ^8.1.4
  # flutter_hooks:

  #* Functional Programming
  fpdart: ^1.1.0

  #* Logging:
  logger: ^2.2.0

  #* Routing
  # auto_route:

  #* Persistent storage
  shared_preferences: ^2.2.2
  flutter_secure_storage: ^9.0.0
  # hive_flutter:


  # Localization
  intl: ^0.18.1
  intl_utils: ^2.8.7

  #* Date Time util
  # jiffy:

  #* Onboarding screen
  introduction_screen: ^3.1.14
  
  #* Utils
  envied: ^0.5.3
  equatable: ^2.0.5
  path_provider: ^2.1.2
  file: ^7.0.0
  analyzer: ^6.4.1
  hive_flutter: ^1.1.0
  sign_in_button: ^3.2.0
  google_sign_in: ^6.2.1
  easy_stepper: ^0.8.3
  intl_phone_number_input: ^0.7.4
  flutter_native_splash: ^2.4.0
  flutter_launcher_icons: ^0.13.1

dev_dependencies:
  flutter_test:
    sdk: flutter
  integration_test:
    sdk: flutter
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  lint: ^2.3.0
  #* Code generators
  envied_generator: ^0.5.3
  build_runner: ^2.4.8
  # flutter_launcher_icons:
  # flutter_native_splash:
  freezed: ^2.4.7
  injectable_generator: ^2.4.2
  json_serializable: ^6.7.1
  flutter_gen_runner: ^5.4.0
  # coverage:

  #* Test
  bloc_test: ^9.1.7
  mocktail: ^1.0.3
  # test:
  mockito: ^5.4.4
  network_image_mock: ^2.1.1  


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # Enable generation of localized Strings from arb files.
  generate: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - google_fonts/
  fonts:
    - family: Roboto
      fonts:
        - asset: google_fonts/Roboto-Medium.ttf
          weight: 500

  
flutter_gen:
  output: lib/src/core/generated # Optional (default: lib/gen/)
  line_length: 80 # Optional (default: 80)

  # Optional
  integrations:
    flutter_svg: true
    flare_flutter: true
  
  

  colors:
    inputs:
      - assets/color/colors.xml

flutter_intl:
  enabled: true
  arb_dir: lib/src/core/l10n
  output_dir: lib/src/core/generated
  

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
